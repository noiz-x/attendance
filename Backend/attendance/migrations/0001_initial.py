# Generated by Django 5.1.6 on 2025-03-22 23:07

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import django.utils.timezone
import recurrence.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_code', models.CharField(max_length=255)),
                ('course_title', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Theatre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('center', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(default=django.utils.timezone.now, help_text='Date when recurrence begins')),
                ('end_date', models.DateField(help_text='Date until which this lecture recurs')),
                ('start_time', models.TimeField(help_text='Start time for the lecture occurrence')),
                ('end_time', models.TimeField(help_text='End time for the lecture occurrence')),
                ('recurrence', recurrence.fields.RecurrenceField(blank=True, help_text='Recurrence rule (e.g. every Monday and Friday)', null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lectures', to='attendance.course')),
                ('theatre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='attendance.theatre')),
            ],
        ),
        migrations.CreateModel(
            name='CanceledOccurrence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('occurrence_date', models.DateField()),
                ('lecture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='canceled_occurrences', to='attendance.lecture')),
            ],
            options={
                'unique_together': {('lecture', 'occurrence_date')},
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('occurrence_date', models.DateField(help_text='The date when this lecture occurrence happened')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('attended', models.BooleanField(default=False, help_text='True if student was in the geofence')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('lecture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='attendance.lecture')),
            ],
            options={
                'unique_together': {('student', 'lecture', 'occurrence_date')},
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('revoked', 'Revoked'), ('expired', 'Expired')], default='active', max_length=10)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='attendance.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('student', 'course')},
            },
        ),
    ]
